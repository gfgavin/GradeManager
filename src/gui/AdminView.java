package gui;

import controllers.AdminController;
import course.Course;
import javax.swing.*;
import user.*;
import db.*;
import java.awt.*;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;

public class AdminView extends javax.swing.JFrame {

    private AdminController adminController;

    /**
     * Creates new form Test
     */
    public AdminView() {
        initComponents();

        addTeacherClassTable.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent evt) {
                JTable table = (JTable) evt.getSource();
                if (evt.getClickCount() == 2) {

                    // Double-click detected
                    int row = table.rowAtPoint(evt.getPoint());

                    ArrayList<Course> courseList = adminController.getCourselist();
                    if (row > courseList.size() - 1) {
                        return;
                    }

                    //delete the teacher with given id and update the controller
                    int courseId = courseList.get(row).getCourseID();
                    //adminController.doSomethingWith(courseId);
                    System.out.println(courseId);
                }
            }
        });

        setAllPanelsInvisible();
        addTeacherPanel.setVisible(true);
    }

    public void setAdmin(String username) {
        adminController = new AdminController(username);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        addTeacherButton = new javax.swing.JButton();
        removeTeacherButton = new javax.swing.JButton();
        addStudent = new javax.swing.JButton();
        removeStudentButton = new javax.swing.JButton();
        addClassButton = new javax.swing.JButton();
        removeClassButton = new javax.swing.JButton();
        addStudentToClassButton = new javax.swing.JButton();
        removeStudentFromClassButton = new javax.swing.JButton();
        addTeacherToClassButton = new javax.swing.JButton();
        removeTeacherFromClassButton = new javax.swing.JButton();
        logOutButton = new javax.swing.JButton();
        jLayeredPane1 = new javax.swing.JLayeredPane();
        addTeacherPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        teacherLast = new javax.swing.JTextField();
        teacherUser = new javax.swing.JTextField();
        teacherPass = new javax.swing.JTextField();
        teacherFirst = new javax.swing.JTextField();
        insertTeacherButton = new javax.swing.JButton();
        removeTeacherPanel = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        removeTeacherTable = new javax.swing.JTable();
        removeTeacher = new javax.swing.JButton();
        addStudentPanel = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        studentLast = new javax.swing.JTextField();
        studentUser = new javax.swing.JTextField();
        studentPass = new javax.swing.JTextField();
        studentFirst = new javax.swing.JTextField();
        insertStudentButton = new javax.swing.JButton();
        removeStudentPanel = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        removeStudentTable = new javax.swing.JTable();
        removeStudent = new javax.swing.JButton();
        addClassPanel = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        className = new javax.swing.JTextField();
        classTime = new javax.swing.JTextField();
        insertClassButton = new javax.swing.JButton();
        removeClassPanel = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        removeClassTable = new javax.swing.JTable();
        removeClass = new javax.swing.JButton();
        addStudentToClassPanel = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        addStudentClassTable = new javax.swing.JTable();
        selectClass4Student = new javax.swing.JButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        studentsToAddTable = new javax.swing.JTable();
        addStudentToClass = new javax.swing.JButton();
        removeStudentFromClassPanel = new javax.swing.JPanel();
        jScrollPane9 = new javax.swing.JScrollPane();
        removeStudentClassTable = new javax.swing.JTable();
        selectClass4StudentRemove = new javax.swing.JButton();
        jScrollPane10 = new javax.swing.JScrollPane();
        studentsToRemoveTable = new javax.swing.JTable();
        removeStudentFromClass = new javax.swing.JButton();
        addTeacherToClassPanel = new javax.swing.JPanel();
        jScrollPane7 = new javax.swing.JScrollPane();
        addTeacherClassTable = new javax.swing.JTable();
        selectClass4Teacher = new javax.swing.JButton();
        jScrollPane8 = new javax.swing.JScrollPane();
        teachersToAddTable = new javax.swing.JTable();
        addTeacherToClass = new javax.swing.JButton();
        removeTeacherFromClassPanel = new javax.swing.JPanel();
        jScrollPane11 = new javax.swing.JScrollPane();
        removeTeacherFromClassTable = new javax.swing.JTable();
        removeTeacherFromClass = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setBackground(new java.awt.Color(102, 255, 255));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 195, Short.MAX_VALUE)
        );

        jPanel3.setBackground(new java.awt.Color(102, 255, 255));

        addTeacherButton.setText("Add Teacher");
        addTeacherButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addTeacherButtonActionPerformed(evt);
            }
        });

        removeTeacherButton.setText("Remove Teacher");
        removeTeacherButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeTeacherButtonActionPerformed(evt);
            }
        });

        addStudent.setText("Add Student");
        addStudent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addStudentActionPerformed(evt);
            }
        });

        removeStudentButton.setText("Remove Student");
        removeStudentButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeStudentButtonActionPerformed(evt);
            }
        });

        addClassButton.setText("Add Class");
        addClassButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addClassButtonActionPerformed(evt);
            }
        });

        removeClassButton.setText("Remove Class");
        removeClassButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeClassButtonActionPerformed(evt);
            }
        });

        addStudentToClassButton.setText("Add Student To Class");
        addStudentToClassButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addStudentToClassButtonActionPerformed(evt);
            }
        });

        removeStudentFromClassButton.setText("Remove Student From Class");
        removeStudentFromClassButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeStudentFromClassButtonActionPerformed(evt);
            }
        });

        addTeacherToClassButton.setText("Add Teacher To Class");
        addTeacherToClassButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addTeacherToClassButtonActionPerformed(evt);
            }
        });

        removeTeacherFromClassButton.setText("Remove Teacher From Class");
        removeTeacherFromClassButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeTeacherFromClassButtonActionPerformed(evt);
            }
        });

        logOutButton.setText("Logout");
        logOutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logOutButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addTeacherButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(removeTeacherButton, javax.swing.GroupLayout.DEFAULT_SIZE, 216, Short.MAX_VALUE)
                    .addComponent(addStudent, javax.swing.GroupLayout.DEFAULT_SIZE, 216, Short.MAX_VALUE)
                    .addComponent(removeStudentButton, javax.swing.GroupLayout.DEFAULT_SIZE, 216, Short.MAX_VALUE)
                    .addComponent(addClassButton, javax.swing.GroupLayout.DEFAULT_SIZE, 216, Short.MAX_VALUE)
                    .addComponent(removeClassButton, javax.swing.GroupLayout.DEFAULT_SIZE, 216, Short.MAX_VALUE)
                    .addComponent(logOutButton, javax.swing.GroupLayout.DEFAULT_SIZE, 216, Short.MAX_VALUE)
                    .addComponent(addStudentToClassButton, javax.swing.GroupLayout.DEFAULT_SIZE, 216, Short.MAX_VALUE)
                    .addComponent(addTeacherToClassButton, javax.swing.GroupLayout.DEFAULT_SIZE, 216, Short.MAX_VALUE)
                    .addComponent(removeTeacherFromClassButton, javax.swing.GroupLayout.DEFAULT_SIZE, 216, Short.MAX_VALUE)
                    .addComponent(removeStudentFromClassButton, javax.swing.GroupLayout.DEFAULT_SIZE, 216, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(addTeacherButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(removeTeacherButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addStudent)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(removeStudentButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addClassButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(removeClassButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addStudentToClassButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(removeStudentFromClassButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addTeacherToClassButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(removeTeacherFromClassButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(logOutButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        addTeacherPanel.setBackground(new java.awt.Color(102, 255, 255));

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel1.setText("Teacher First Name:");

        jLabel3.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel3.setText("Teacher Last Name:");

        jLabel4.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel4.setText("User Login:");

        jLabel5.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel5.setText("User Password:");

        teacherLast.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N

        teacherUser.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        teacherUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                teacherUserActionPerformed(evt);
            }
        });

        teacherPass.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N

        teacherFirst.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        teacherFirst.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                teacherFirstActionPerformed(evt);
            }
        });

        insertTeacherButton.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        insertTeacherButton.setText("Add Teacher");
        insertTeacherButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertTeacherButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout addTeacherPanelLayout = new javax.swing.GroupLayout(addTeacherPanel);
        addTeacherPanel.setLayout(addTeacherPanelLayout);
        addTeacherPanelLayout.setHorizontalGroup(
            addTeacherPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addTeacherPanelLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(addTeacherPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(addTeacherPanelLayout.createSequentialGroup()
                        .addGroup(addTeacherPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(addTeacherPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(teacherUser, javax.swing.GroupLayout.DEFAULT_SIZE, 271, Short.MAX_VALUE)
                            .addComponent(teacherLast)))
                    .addGroup(addTeacherPanelLayout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(teacherFirst))
                    .addGroup(addTeacherPanelLayout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(teacherPass)))
                .addGap(128, 128, 128)
                .addComponent(insertTeacherButton)
                .addContainerGap(299, Short.MAX_VALUE))
        );
        addTeacherPanelLayout.setVerticalGroup(
            addTeacherPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addTeacherPanelLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(addTeacherPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(teacherFirst, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(addTeacherPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(addTeacherPanelLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(addTeacherPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(teacherLast, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(addTeacherPanelLayout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(insertTeacherButton, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(addTeacherPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(teacherUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(addTeacherPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(teacherPass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(266, Short.MAX_VALUE))
        );

        removeTeacherPanel.setBackground(new java.awt.Color(102, 255, 255));

        removeTeacherTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Teachers"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        removeTeacherTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane2.setViewportView(removeTeacherTable);

        removeTeacher.setText("RemoveTeacher");
        removeTeacher.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeTeacherActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout removeTeacherPanelLayout = new javax.swing.GroupLayout(removeTeacherPanel);
        removeTeacherPanel.setLayout(removeTeacherPanelLayout);
        removeTeacherPanelLayout.setHorizontalGroup(
            removeTeacherPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(removeTeacherPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 356, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(174, 174, 174)
                .addComponent(removeTeacher)
                .addContainerGap(492, Short.MAX_VALUE))
        );
        removeTeacherPanelLayout.setVerticalGroup(
            removeTeacherPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(removeTeacherPanelLayout.createSequentialGroup()
                .addGroup(removeTeacherPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(removeTeacherPanelLayout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(removeTeacherPanelLayout.createSequentialGroup()
                        .addGap(90, 90, 90)
                        .addComponent(removeTeacher)))
                .addContainerGap(101, Short.MAX_VALUE))
        );

        addStudentPanel.setBackground(new java.awt.Color(102, 255, 255));

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel2.setText("Student First Name:");

        jLabel6.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel6.setText("Student Last Name:");

        jLabel7.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel7.setText("User Login:");

        jLabel8.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel8.setText("User Password:");

        studentLast.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N

        studentUser.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        studentUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                studentUserActionPerformed(evt);
            }
        });

        studentPass.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N

        studentFirst.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        studentFirst.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                studentFirstActionPerformed(evt);
            }
        });

        insertStudentButton.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        insertStudentButton.setText("Add Student");
        insertStudentButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertStudentButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout addStudentPanelLayout = new javax.swing.GroupLayout(addStudentPanel);
        addStudentPanel.setLayout(addStudentPanelLayout);
        addStudentPanelLayout.setHorizontalGroup(
            addStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addStudentPanelLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(addStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(addStudentPanelLayout.createSequentialGroup()
                        .addGroup(addStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(addStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(studentUser, javax.swing.GroupLayout.DEFAULT_SIZE, 271, Short.MAX_VALUE)
                            .addComponent(studentLast)))
                    .addGroup(addStudentPanelLayout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(studentFirst))
                    .addGroup(addStudentPanelLayout.createSequentialGroup()
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(studentPass)))
                .addGap(128, 128, 128)
                .addComponent(insertStudentButton)
                .addContainerGap(299, Short.MAX_VALUE))
        );
        addStudentPanelLayout.setVerticalGroup(
            addStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addStudentPanelLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(addStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(studentFirst, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(addStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(addStudentPanelLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(addStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(studentLast, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(addStudentPanelLayout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(insertStudentButton, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(addStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(studentUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(addStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(studentPass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(255, Short.MAX_VALUE))
        );

        removeStudentPanel.setBackground(new java.awt.Color(102, 255, 255));

        jScrollPane3.setName(""); // NOI18N

        removeStudentTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Students"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        removeStudentTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane3.setViewportView(removeStudentTable);

        removeStudent.setText("Remove Student");
        removeStudent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeStudentActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout removeStudentPanelLayout = new javax.swing.GroupLayout(removeStudentPanel);
        removeStudentPanel.setLayout(removeStudentPanelLayout);
        removeStudentPanelLayout.setHorizontalGroup(
            removeStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(removeStudentPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 356, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(174, 174, 174)
                .addComponent(removeStudent)
                .addContainerGap(492, Short.MAX_VALUE))
        );
        removeStudentPanelLayout.setVerticalGroup(
            removeStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(removeStudentPanelLayout.createSequentialGroup()
                .addGroup(removeStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(removeStudentPanelLayout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(removeStudentPanelLayout.createSequentialGroup()
                        .addGap(90, 90, 90)
                        .addComponent(removeStudent)))
                .addContainerGap(101, Short.MAX_VALUE))
        );

        addClassPanel.setBackground(new java.awt.Color(102, 255, 255));

        jLabel9.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel9.setText("Class Name:");

        jLabel10.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel10.setText("Class Time:");

        className.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        className.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                classNameActionPerformed(evt);
            }
        });

        classTime.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N

        insertClassButton.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        insertClassButton.setText("Add Class");
        insertClassButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertClassButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout addClassPanelLayout = new javax.swing.GroupLayout(addClassPanel);
        addClassPanel.setLayout(addClassPanelLayout);
        addClassPanelLayout.setHorizontalGroup(
            addClassPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addClassPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(addClassPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(addClassPanelLayout.createSequentialGroup()
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(className))
                    .addGroup(addClassPanelLayout.createSequentialGroup()
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(addClassPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(insertClassButton)
                            .addComponent(classTime, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(587, Short.MAX_VALUE))
        );
        addClassPanelLayout.setVerticalGroup(
            addClassPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addClassPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(addClassPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(className, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(addClassPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(classTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(insertClassButton, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(363, Short.MAX_VALUE))
        );

        removeClassPanel.setBackground(new java.awt.Color(102, 255, 255));

        jScrollPane4.setName(""); // NOI18N

        removeClassTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Classes"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        removeClassTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane4.setViewportView(removeClassTable);

        removeClass.setText("Remove Class");
        removeClass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeClassActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout removeClassPanelLayout = new javax.swing.GroupLayout(removeClassPanel);
        removeClassPanel.setLayout(removeClassPanelLayout);
        removeClassPanelLayout.setHorizontalGroup(
            removeClassPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(removeClassPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 356, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(174, 174, 174)
                .addComponent(removeClass)
                .addContainerGap(492, Short.MAX_VALUE))
        );
        removeClassPanelLayout.setVerticalGroup(
            removeClassPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(removeClassPanelLayout.createSequentialGroup()
                .addGroup(removeClassPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(removeClassPanelLayout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(removeClassPanelLayout.createSequentialGroup()
                        .addGap(90, 90, 90)
                        .addComponent(removeClass)))
                .addContainerGap(101, Short.MAX_VALUE))
        );

        addStudentToClassPanel.setBackground(new java.awt.Color(102, 255, 255));

        jScrollPane5.setName(""); // NOI18N

        addStudentClassTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Classes"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        addStudentClassTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane5.setViewportView(addStudentClassTable);

        selectClass4Student.setText("Select Class");
        selectClass4Student.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectClass4StudentActionPerformed(evt);
            }
        });

        jScrollPane6.setName(""); // NOI18N

        studentsToAddTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Students"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        studentsToAddTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane6.setViewportView(studentsToAddTable);

        addStudentToClass.setText("Add Student To Class");
        addStudentToClass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addStudentToClassActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout addStudentToClassPanelLayout = new javax.swing.GroupLayout(addStudentToClassPanel);
        addStudentToClassPanel.setLayout(addStudentToClassPanelLayout);
        addStudentToClassPanelLayout.setHorizontalGroup(
            addStudentToClassPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addStudentToClassPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 356, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(selectClass4Student)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 356, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(addStudentToClass)
                .addContainerGap(153, Short.MAX_VALUE))
        );
        addStudentToClassPanelLayout.setVerticalGroup(
            addStudentToClassPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addStudentToClassPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(addStudentToClassPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(selectClass4Student)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addStudentToClass)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(146, Short.MAX_VALUE))
        );

        removeStudentFromClassPanel.setBackground(new java.awt.Color(102, 255, 255));

        jScrollPane9.setName(""); // NOI18N

        removeStudentClassTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Classes"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        removeStudentClassTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane9.setViewportView(removeStudentClassTable);

        selectClass4StudentRemove.setText("Select Class");
        selectClass4StudentRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectClass4StudentRemoveActionPerformed(evt);
            }
        });

        jScrollPane10.setName(""); // NOI18N

        studentsToRemoveTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Students"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        studentsToRemoveTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane10.setViewportView(studentsToRemoveTable);

        removeStudentFromClass.setText("Remove Student From Class");
        removeStudentFromClass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeStudentFromClassActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout removeStudentFromClassPanelLayout = new javax.swing.GroupLayout(removeStudentFromClassPanel);
        removeStudentFromClassPanel.setLayout(removeStudentFromClassPanelLayout);
        removeStudentFromClassPanelLayout.setHorizontalGroup(
            removeStudentFromClassPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(removeStudentFromClassPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 356, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(selectClass4StudentRemove)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 356, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(removeStudentFromClass)
                .addContainerGap(121, Short.MAX_VALUE))
        );
        removeStudentFromClassPanelLayout.setVerticalGroup(
            removeStudentFromClassPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(removeStudentFromClassPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(removeStudentFromClassPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(selectClass4StudentRemove)
                    .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(removeStudentFromClass)
                    .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(146, Short.MAX_VALUE))
        );

        addTeacherToClassPanel.setBackground(new java.awt.Color(102, 255, 255));

        jScrollPane7.setName(""); // NOI18N

        addTeacherClassTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Classes"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        addTeacherClassTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane7.setViewportView(addTeacherClassTable);

        selectClass4Teacher.setText("Select Class");
        selectClass4Teacher.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectClass4TeacherActionPerformed(evt);
            }
        });

        jScrollPane8.setName(""); // NOI18N

        teachersToAddTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Teachers"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        teachersToAddTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane8.setViewportView(teachersToAddTable);

        addTeacherToClass.setText("Add Teacher To Class");
        addTeacherToClass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addTeacherToClassActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout addTeacherToClassPanelLayout = new javax.swing.GroupLayout(addTeacherToClassPanel);
        addTeacherToClassPanel.setLayout(addTeacherToClassPanelLayout);
        addTeacherToClassPanelLayout.setHorizontalGroup(
            addTeacherToClassPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addTeacherToClassPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 356, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(selectClass4Teacher)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 356, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(addTeacherToClass)
                .addContainerGap(151, Short.MAX_VALUE))
        );
        addTeacherToClassPanelLayout.setVerticalGroup(
            addTeacherToClassPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addTeacherToClassPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(addTeacherToClassPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(selectClass4Teacher)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addTeacherToClass)
                    .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(146, Short.MAX_VALUE))
        );

        removeTeacherFromClassPanel.setBackground(new java.awt.Color(102, 255, 255));

        jScrollPane11.setName(""); // NOI18N

        removeTeacherFromClassTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Classes"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        removeTeacherFromClassTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane11.setViewportView(removeTeacherFromClassTable);

        removeTeacherFromClass.setText("Remove Teacher");
        removeTeacherFromClass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeTeacherFromClassActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout removeTeacherFromClassPanelLayout = new javax.swing.GroupLayout(removeTeacherFromClassPanel);
        removeTeacherFromClassPanel.setLayout(removeTeacherFromClassPanelLayout);
        removeTeacherFromClassPanelLayout.setHorizontalGroup(
            removeTeacherFromClassPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(removeTeacherFromClassPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, 356, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(removeTeacherFromClass)
                .addContainerGap(634, Short.MAX_VALUE))
        );
        removeTeacherFromClassPanelLayout.setVerticalGroup(
            removeTeacherFromClassPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(removeTeacherFromClassPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(removeTeacherFromClassPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(removeTeacherFromClass)
                    .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(124, Short.MAX_VALUE))
        );

        jLayeredPane1.setLayer(addTeacherPanel, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(removeTeacherPanel, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(addStudentPanel, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(removeStudentPanel, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(addClassPanel, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(removeClassPanel, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(addStudentToClassPanel, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(removeStudentFromClassPanel, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(addTeacherToClassPanel, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(removeTeacherFromClassPanel, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jLayeredPane1Layout = new javax.swing.GroupLayout(jLayeredPane1);
        jLayeredPane1.setLayout(jLayeredPane1Layout);
        jLayeredPane1Layout.setHorizontalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                .addComponent(addTeacherPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jLayeredPane1Layout.createSequentialGroup()
                    .addComponent(removeTeacherPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
            .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPane1Layout.createSequentialGroup()
                    .addComponent(addStudentPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
            .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(removeStudentPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(addClassPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(removeClassPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(addStudentToClassPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(removeStudentFromClassPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(addTeacherToClassPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(removeTeacherFromClassPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jLayeredPane1Layout.setVerticalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(addTeacherPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPane1Layout.createSequentialGroup()
                    .addComponent(removeTeacherPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
            .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPane1Layout.createSequentialGroup()
                    .addComponent(addStudentPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
            .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(removeStudentPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(addClassPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(removeClassPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(addStudentToClassPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(removeStudentFromClassPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(addTeacherToClassPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(removeTeacherFromClassPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLayeredPane1)
                    .addComponent(jScrollPane1)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLayeredPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void logOutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logOutButtonActionPerformed
        this.setVisible(false);
        new Login().setVisible(true);
    }//GEN-LAST:event_logOutButtonActionPerformed

    private void addTeacherButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addTeacherButtonActionPerformed
        setAllPanelsInvisible();
        addTeacherPanel.setVisible(true);
    }//GEN-LAST:event_addTeacherButtonActionPerformed

    private void removeTeacherButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeTeacherButtonActionPerformed
        setAllPanelsInvisible();
        removeTeacherPanel.setVisible(true);

        ArrayList<Teacher> teacherList = adminController.getTeacherlist();
        DefaultTableModel model = (DefaultTableModel) removeTeacherTable.getModel();
        model.getDataVector().removeAllElements();
        int i = 0;
        for (Teacher t : teacherList) {
            model.insertRow(i, new Object[]{t.toString()});
            i++;

        }
        for (int j = teacherList.size(); j < 25; j++) {
            model.addRow(new Object[]{" "});
        }
    }//GEN-LAST:event_removeTeacherButtonActionPerformed

    private void addTeacherToClassButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addTeacherToClassButtonActionPerformed
        setAllPanelsInvisible();
        addTeacherToClassPanel.setVisible(true);

        ArrayList<Course> courseList = adminController.getCourselist();
        DefaultTableModel model = (DefaultTableModel) addTeacherClassTable.getModel();
        model.getDataVector().removeAllElements();
        int i = 0;
        for (Course t : courseList) {
            model.insertRow(i, new Object[]{t.toString()});
            i++;

        }
        for (int j = courseList.size(); j < 25; j++) {
            model.addRow(new Object[]{" "});
        }
    }//GEN-LAST:event_addTeacherToClassButtonActionPerformed

    private void removeTeacherFromClassButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeTeacherFromClassButtonActionPerformed
        setAllPanelsInvisible();
        removeTeacherFromClassPanel.setVisible(true);

        ArrayList<Course> courseList = adminController.getCourselist();
        DefaultTableModel model = (DefaultTableModel) removeTeacherFromClassTable.getModel();
        model.getDataVector().removeAllElements();
        int i = 0;
        for (Course t : courseList) {
            model.insertRow(i, new Object[]{t.toString()});
            i++;

        }
        for (int j = courseList.size(); j < 25; j++) {
            model.addRow(new Object[]{" "});
        }
    }//GEN-LAST:event_removeTeacherFromClassButtonActionPerformed

    private void addStudentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addStudentActionPerformed
        setAllPanelsInvisible();
        addStudentPanel.setVisible(true);
    }//GEN-LAST:event_addStudentActionPerformed

    private void teacherFirstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_teacherFirstActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_teacherFirstActionPerformed

    private void teacherUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_teacherUserActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_teacherUserActionPerformed

    private void insertTeacherButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertTeacherButtonActionPerformed
        String first = teacherFirst.getText();
        String last = teacherLast.getText();
        String user = teacherUser.getText();
        String pass = teacherPass.getText();

        adminController.createTeacher(first, last, user, pass);
    }//GEN-LAST:event_insertTeacherButtonActionPerformed

    private void removeTeacherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeTeacherActionPerformed
        int row = removeTeacherTable.getSelectedRow();

        ArrayList<Teacher> teacherList = adminController.getTeacherlist();
        if (row > teacherList.size() - 1) {
            return;
        }

        //delete the teacher with given id and update the controller
        int teacherId = teacherList.get(row).getTeacherID();
        adminController.deleteTeacher(teacherId);

        //refresh the panel
        removeTeacherButtonActionPerformed(evt);
    }//GEN-LAST:event_removeTeacherActionPerformed

    private void studentUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_studentUserActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_studentUserActionPerformed

    private void studentFirstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_studentFirstActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_studentFirstActionPerformed

    private void insertStudentButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertStudentButtonActionPerformed
        String first = studentFirst.getText();
        String last = studentLast.getText();
        String user = studentUser.getText();
        String pass = studentPass.getText();

        adminController.createStudent(first, last, user, pass);
    }//GEN-LAST:event_insertStudentButtonActionPerformed

    private void removeStudentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeStudentActionPerformed
        int row = removeStudentTable.getSelectedRow();

        ArrayList<Student> studentList = adminController.getStudentlist();
        if (row > studentList.size() - 1) {
            return;
        }

        //delete the student with given id and update the controller
        int studentId = studentList.get(row).getStudentID();
        adminController.deleteStudent(studentId);

        //refresh the panel
        removeStudentButtonActionPerformed(evt);
    }//GEN-LAST:event_removeStudentActionPerformed

    private void removeStudentButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeStudentButtonActionPerformed
        setAllPanelsInvisible();
        removeStudentPanel.setVisible(true);

        ArrayList<Student> studentList = adminController.getStudentlist();
        DefaultTableModel model = (DefaultTableModel) removeStudentTable.getModel();
        model.getDataVector().removeAllElements();
        int i = 0;
        for (Student t : studentList) {
            model.insertRow(i, new Object[]{t.toString()});
            i++;

        }
        for (int j = studentList.size(); j < 25; j++) {
            model.addRow(new Object[]{" "});
        }
    }//GEN-LAST:event_removeStudentButtonActionPerformed

    private void classNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_classNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_classNameActionPerformed

    private void insertClassButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertClassButtonActionPerformed
        String name = className.getText();
        String time = classTime.getText();

        adminController.createCourse(name, time);
    }//GEN-LAST:event_insertClassButtonActionPerformed

    private void addClassButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addClassButtonActionPerformed
        setAllPanelsInvisible();
        addClassPanel.setVisible(true);
    }//GEN-LAST:event_addClassButtonActionPerformed

    private void removeClassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeClassActionPerformed
        int row = removeClassTable.getSelectedRow();

        ArrayList<Course> courseList = adminController.getCourselist();
        if (row > courseList.size() - 1) {
            return;
        }

        //delete the student with given id and update the controller
        int courseId = courseList.get(row).getCourseID();
        adminController.deleteCourse(courseId);

        //refresh the panel
        removeClassButtonActionPerformed(evt);
    }//GEN-LAST:event_removeClassActionPerformed

    private void removeClassButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeClassButtonActionPerformed
        setAllPanelsInvisible();
        removeClassPanel.setVisible(true);

        ArrayList<Course> courseList = adminController.getCourselist();
        DefaultTableModel model = (DefaultTableModel) removeClassTable.getModel();
        model.getDataVector().removeAllElements();
        int i = 0;
        for (Course t : courseList) {
            model.insertRow(i, new Object[]{t.toString()});
            i++;

        }
        for (int j = courseList.size(); j < 25; j++) {
            model.addRow(new Object[]{" "});
        }
    }//GEN-LAST:event_removeClassButtonActionPerformed

    private void selectClass4StudentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectClass4StudentActionPerformed
        int row = addStudentClassTable.getSelectedRow();

        ArrayList<Course> courseList = adminController.getCourselist();
        if (row > courseList.size() - 1) {
            return;
        }

        //delete the student with given id and update the controller
        int courseId = courseList.get(row).getCourseID();
        ArrayList<Student> studentsNotInCourse = adminController.studentsNotInCourse(courseId);
        DefaultTableModel model = (DefaultTableModel) studentsToAddTable.getModel();
        model.getDataVector().removeAllElements();
        int i = 0;
        for (Student t : studentsNotInCourse) {
            model.insertRow(i, new Object[]{t.toString()});
            i++;

        }
        for (int j = studentsNotInCourse.size(); j < 25; j++) {
            model.addRow(new Object[]{" "});
        }

        //refresh the panel
        //addStudentToClassButtonActionPerformed(evt);
    }//GEN-LAST:event_selectClass4StudentActionPerformed

    private void addStudentToClassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addStudentToClassActionPerformed
        int row = studentsToAddTable.getSelectedRow();

        ArrayList<Student> studentList = adminController.getStudentSubList();
        if (row > studentList.size() - 1) {
            return;
        }

        //add the student with given id and update the controller
        int studentId = studentList.get(row).getStudentID();
        adminController.addStudentToCourse(studentId);

        //refresh the panel
        addStudentToClassButtonActionPerformed(evt);
    }//GEN-LAST:event_addStudentToClassActionPerformed

    private void addStudentToClassButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addStudentToClassButtonActionPerformed
        setAllPanelsInvisible();
        addStudentToClassPanel.setVisible(true);

        ArrayList<Course> courseList = adminController.getCourselist();
        DefaultTableModel model = (DefaultTableModel) addStudentClassTable.getModel();
        model.getDataVector().removeAllElements();
        int i = 0;
        for (Course t : courseList) {
            model.insertRow(i, new Object[]{t.toString()});
            i++;

        }
        for (int j = courseList.size(); j < 25; j++) {
            model.addRow(new Object[]{" "});
        }
    }//GEN-LAST:event_addStudentToClassButtonActionPerformed

    private void selectClass4TeacherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectClass4TeacherActionPerformed
        int row = addTeacherClassTable.getSelectedRow();

        ArrayList<Course> courseList = adminController.getCourselist();
        if (row > courseList.size() - 1) {
            return;
        }

        //delete the student with given id and update the controller
        int courseId = courseList.get(row).getCourseID();
        adminController.setSelectedCourse(courseId);
        ArrayList<Teacher> teacherList = adminController.getTeacherlist();
        DefaultTableModel model = (DefaultTableModel) teachersToAddTable.getModel();
        model.getDataVector().removeAllElements();
        int i = 0;
        for (Teacher t : teacherList) {
            model.insertRow(i, new Object[]{t.toString()});
            i++;

        }
        for (int j = teacherList.size(); j < 25; j++) {
            model.addRow(new Object[]{" "});
        }
    }//GEN-LAST:event_selectClass4TeacherActionPerformed

    private void addTeacherToClassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addTeacherToClassActionPerformed
        int row = teachersToAddTable.getSelectedRow();

        ArrayList<Teacher> teacherList = adminController.getTeacherlist();
        if (row > teacherList.size() - 1) {
            return;
        }

        //add the student with given id and update the controller
        int teacherId = teacherList.get(row).getTeacherID();
        adminController.addTeacherToCourse(teacherId);

        //refresh the panel
        addTeacherToClassButtonActionPerformed(evt);
    }//GEN-LAST:event_addTeacherToClassActionPerformed

    private void selectClass4StudentRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectClass4StudentRemoveActionPerformed
        int row = removeStudentClassTable.getSelectedRow();

        ArrayList<Course> courseList = adminController.getCourselist();
        if (row > courseList.size() - 1) {
            return;
        }

        //delete the student with given id and update the controller
        int courseId = courseList.get(row).getCourseID();
        ArrayList<Student> studentsInCourse = adminController.studentsInCourse(courseId);
        DefaultTableModel model = (DefaultTableModel) studentsToRemoveTable.getModel();
        model.getDataVector().removeAllElements();
        int i = 0;
        for (Student t : studentsInCourse) {
            model.insertRow(i, new Object[]{t.toString()});
            i++;

        }
        for (int j = studentsInCourse.size(); j < 25; j++) {
            model.addRow(new Object[]{" "});
        }

        //refresh the panel
        //addStudentToClassButtonActionPerformed(evt);
    }//GEN-LAST:event_selectClass4StudentRemoveActionPerformed

    private void removeStudentFromClassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeStudentFromClassActionPerformed
        int row = studentsToRemoveTable.getSelectedRow();

        ArrayList<Student> studentList = adminController.getStudentSubList();
        if (row > studentList.size() - 1) {
            return;
        }

        //remove the student with given id and update the controller
        int studentId = studentList.get(row).getStudentID();
        adminController.removeStudentFromCourse(studentId);

        //refresh the panel
        removeStudentFromClassButtonActionPerformed(evt);
    }//GEN-LAST:event_removeStudentFromClassActionPerformed

    private void removeStudentFromClassButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeStudentFromClassButtonActionPerformed
        setAllPanelsInvisible();
        removeStudentFromClassPanel.setVisible(true);

        ArrayList<Course> courseList = adminController.getCourselist();
        DefaultTableModel model = (DefaultTableModel) removeStudentClassTable.getModel();
        model.getDataVector().removeAllElements();
        int i = 0;
        for (Course t : courseList) {
            model.insertRow(i, new Object[]{t.toString()});
            i++;

        }
        for (int j = courseList.size(); j < 25; j++) {
            model.addRow(new Object[]{" "});
        }
    }//GEN-LAST:event_removeStudentFromClassButtonActionPerformed

    private void removeTeacherFromClassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeTeacherFromClassActionPerformed
        int row = removeTeacherFromClassTable.getSelectedRow();

        ArrayList<Course> courseList = adminController.getCourselist();
        if (row > courseList.size() - 1) {
            return;
        }

        //delete the teacher with given id and update the controller
        int courseId = courseList.get(row).getCourseID();
        adminController.removeTeacherFromCourse(courseId);

        //refresh the panel
        removeTeacherFromClassButtonActionPerformed(evt);
    }//GEN-LAST:event_removeTeacherFromClassActionPerformed

    /**
     * @param args the command line arguments
     */
    private void init() {

    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdminView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdminView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdminView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {

                AdminView n = new AdminView();
                n.setVisible(true);
                n.init();

            }
        });

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addClassButton;
    private javax.swing.JPanel addClassPanel;
    private javax.swing.JButton addStudent;
    private javax.swing.JTable addStudentClassTable;
    private javax.swing.JPanel addStudentPanel;
    private javax.swing.JButton addStudentToClass;
    private javax.swing.JButton addStudentToClassButton;
    private javax.swing.JPanel addStudentToClassPanel;
    private javax.swing.JButton addTeacherButton;
    private javax.swing.JTable addTeacherClassTable;
    private javax.swing.JPanel addTeacherPanel;
    private javax.swing.JButton addTeacherToClass;
    private javax.swing.JButton addTeacherToClassButton;
    private javax.swing.JPanel addTeacherToClassPanel;
    private javax.swing.JTextField className;
    private javax.swing.JTextField classTime;
    private javax.swing.JButton insertClassButton;
    private javax.swing.JButton insertStudentButton;
    private javax.swing.JButton insertTeacherButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JButton logOutButton;
    private javax.swing.JButton removeClass;
    private javax.swing.JButton removeClassButton;
    private javax.swing.JPanel removeClassPanel;
    private javax.swing.JTable removeClassTable;
    private javax.swing.JButton removeStudent;
    private javax.swing.JButton removeStudentButton;
    private javax.swing.JTable removeStudentClassTable;
    private javax.swing.JButton removeStudentFromClass;
    private javax.swing.JButton removeStudentFromClassButton;
    private javax.swing.JPanel removeStudentFromClassPanel;
    private javax.swing.JPanel removeStudentPanel;
    private javax.swing.JTable removeStudentTable;
    private javax.swing.JButton removeTeacher;
    private javax.swing.JButton removeTeacherButton;
    private javax.swing.JButton removeTeacherFromClass;
    private javax.swing.JButton removeTeacherFromClassButton;
    private javax.swing.JPanel removeTeacherFromClassPanel;
    private javax.swing.JTable removeTeacherFromClassTable;
    private javax.swing.JPanel removeTeacherPanel;
    private javax.swing.JTable removeTeacherTable;
    private javax.swing.JButton selectClass4Student;
    private javax.swing.JButton selectClass4StudentRemove;
    private javax.swing.JButton selectClass4Teacher;
    private javax.swing.JTextField studentFirst;
    private javax.swing.JTextField studentLast;
    private javax.swing.JTextField studentPass;
    private javax.swing.JTextField studentUser;
    private javax.swing.JTable studentsToAddTable;
    private javax.swing.JTable studentsToRemoveTable;
    private javax.swing.JTextField teacherFirst;
    private javax.swing.JTextField teacherLast;
    private javax.swing.JTextField teacherPass;
    private javax.swing.JTextField teacherUser;
    private javax.swing.JTable teachersToAddTable;
    // End of variables declaration//GEN-END:variables

    public static void changename(JTable j) {
        j.getColumnModel().getColumn(3).setHeaderValue("hiii");

    }

    public static void updateGrade(JTable j) {

    }

    private void setAllPanelsInvisible() {
        addTeacherPanel.setVisible(false);
        removeTeacherPanel.setVisible(false);
        addStudentPanel.setVisible(false);
        removeStudentPanel.setVisible(false);
        addClassPanel.setVisible(false);
        removeClassPanel.setVisible(false);
        addStudentToClassPanel.setVisible(false);
        removeStudentFromClassPanel.setVisible(false);
        addTeacherToClassPanel.setVisible(false);
        removeTeacherFromClassPanel.setVisible(false);
    }

}
